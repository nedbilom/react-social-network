{"version":3,"sources":["components/Common/FormsControls/FormsControls.module.css","components/Common/FormsControls/FormsControls.jsx","untils/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Textarea","input","meta","touched","error","props","hasError","className","style","formControl","Input","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogsItem","path","id","s","dialog","activeClassName","active","name","Message","message","avatar","src","alt","content","maxLengthCreator50","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","dialogsTextarea","placeholder","cols","rows","Dialogs","dialogsElement","dialogsPage","dataDialogsItem","map","key","messagesElement","dataMessages","dialogs","dialogs_items","messages","addSms","values","newMessage","newMessageBody","compose"],"mappings":"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","file":"static/js/6.ae8d4b54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__35sHi\",\"error\":\"FormsControls_error__3dHb_\",\"form_summery_error\":\"FormsControls_form_summery_error__1hCjM\"};","import React from 'react';\r\nimport style from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({ input, meta: {touched, error}, ...props }) => {\r\n\r\n  const hasError = touched && error;\r\n\r\n  return <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n    <textarea  {...props} {...input} /> <br />\r\n    {hasError && < span > {error}</span>}\r\n  </div >\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n\r\n  const hasError = touched && error;\r\n\r\n  return <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n    <input  {...props} {...input} /> <br />\r\n    {hasError && < span > {error}</span>}\r\n  </div >\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required!';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n      return <Component {...this.props} />\r\n\r\n    }\r\n\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__289D6\",\"dialogs_items\":\"Dialogs_dialogs_items__lYrLj\",\"dialog\":\"Dialogs_dialog__bug_S\",\"active\":\"Dialogs_active__38SiC\",\"messages\":\"Dialogs_messages__45NRi\",\"message\":\"Dialogs_message__3Jmfh\",\"avatar\":\"Dialogs_avatar__3f8p9\",\"addSms\":\"Dialogs_addSms__3rM6R\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Components\r\nconst DialogsItem = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <img className={s.avatar} src={props.avatar} alt=\"avatar\" />\r\n            {props.content}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../untils/validators';\r\n\r\nlet maxLengthCreator50 = maxLengthCreator(50);\r\n\r\nconst MessageForm = (props) => {\r\n\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div><Field component={Textarea} validate={[required, maxLengthCreator50]} className={props.style.dialogsTextarea} placeholder=\"Enter your message\" name=\"newMessageBody\" id=\"\" cols=\"60\" rows=\"10\"></Field></div>\r\n    <div><button>Отправить</button></div>\r\n  </form>\r\n\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n  form: \"dialogAddMessageForm\"\r\n})(MessageForm);\r\n\r\nexport default MessageReduxForm;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MessageReduxForm from \"./MessageForm\";\r\n\r\n// Main component\r\nconst Dialogs = (props) => {\r\n\r\n    // Mapped\r\n    const dialogsElement = props.dialogsPage.dataDialogsItem.map(dialog =>\r\n        <DialogsItem name={dialog.name} id={dialog.id} key={dialog.id} />\r\n    );\r\n\r\n    const messagesElement = props.dialogsPage.dataMessages.map(message =>\r\n        <Message content={message.content} avatar={message.avatar} key={message.id} />\r\n    );\r\n\r\n    const addNewMessage = (values) => {\r\n        props.newMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n\r\n                <div className={s.addSms}>\r\n                    <MessageReduxForm onSubmit={addNewMessage} style={s} />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { newMessage } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\n// Main component\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { newMessage }),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}