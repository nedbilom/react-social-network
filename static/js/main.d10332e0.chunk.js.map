{"version":3,"sources":["serviceWorker.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Aside/AsideFriends/AsideFriends.jsx","components/Aside/Aside.jsx","components/Aside/AsideContainer.jsx","redux/app-reducer.js","redux/aside-reducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","components/Aside/AsideFriends/AsideFriends.module.css","components/Aside/Aside.module.css","components/Header/Header.module.css","components/Common/Preloader/Preloader.js","redux/profile-reducer.js","redux/dialogs-reducer.js","api/api.js","untils/object-helpers.js","redux/users-reducer.js","components/Common/Preloader/Preloader.module.css","images/icons/preloader.svg"],"names":["Boolean","window","location","hostname","match","Header","props","className","s","header","src","alt","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","state","auth","AsideFriends","friendsList","dataFriends","map","friend","asideFriends__item","key","id","href","friend_avatar","avatarLink","friend_name","friendName","aside_wrap","asideFriends","Aside","menuItems","dataMenu","item","link","mainNav_item","activeClassName","active_item","name","aside","mainNav","AsideContainer","asideState","initialState","initialized","appReducer","action","type","asideReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Login","lazy","ProfileContainer","DialogsContainer","UsersContainer","Music","News","Settings","App","initializeApp","Suspense","fallback","path","render","component","Preloader","AppContainer","withRouter","dispatch","a","authorized","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","inizialState","userId","email","setAuthUserData","payload","authAPI","me","response","resultCode","data","password","rememberMe","message","messages","length","stopSubmit","_error","module","exports","wrapper","preloader","NEW_POST","postData","likeCount","profile","status","addPost","newPostBody","setStatus","getProfile","profileAPI","getStatus","updateStatus","newPostText","filter","elem","postId","dataDialogsItem","dataMessages","content","avatar","newMessage","newMessageBody","contentText","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","put","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","requestUsers","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.d10332e0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://s2.logaster.com/static/v3/img/products/logo.png\" alt=\"logo\" />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>logout</button></div> : <NavLink to={\"/login\"}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport s from './AsideFriends.module.css';\r\n\r\nconst AsideFriends = (props) => {\r\n    const friendsList = props.dataFriends.map(friend =>\r\n        <div className={s.asideFriends__item} key={friend.id}>\r\n            <a href=\"#\"><img className={s.friend_avatar} src={friend.avatarLink} alt=\"avatar\" /></a>\r\n            <a className={s.friend_name} href=\"#\">{friend.friendName}</a>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className={s.aside_wrap}>\r\n            <h3>Friends</h3>\r\n            <div className={s.asideFriends}>\r\n                {friendsList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AsideFriends;","import React from 'react';\r\nimport s from './Aside.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AsideFriends from './AsideFriends/AsideFriends';\r\n\r\nconst Aside = (props) => {\r\n    const menuItems = props.dataMenu.map(item =>\r\n        <li key={item.id}><NavLink to={item.link} className={s.mainNav_item} activeClassName={s.active_item}>{item.name}</NavLink></li>);\r\n\r\n    return (\r\n\r\n        <aside className={s.aside}>\r\n            <nav>\r\n                <ul className={s.mainNav}>\r\n                    {menuItems}\r\n                </ul>\r\n            </nav>\r\n            <AsideFriends dataFriends={props.dataFriends} />\r\n        </aside>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Aside;","import { connect } from 'react-redux';\r\nimport Aside from './Aside';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dataMenu: state.asideState.dataMenu,\r\n        dataFriends: state.asideState.dataFriends,\r\n    };\r\n};\r\n\r\nconst AsideContainer = connect(mapStateToProps)(Aside);\r\n\r\nexport default AsideContainer;","import { authorized } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"app/INITIALIZED_SUCCESS\"\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS\r\n})\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n  await dispatch(authorized())\r\n  \r\n  dispatch(initializedSuccess())\r\n}\r\nexport default appReducer;","let initialState = {\r\n    dataMenu: [\r\n        {\r\n            \"id\": 1,\r\n            \"link\": \"/Profile\",\r\n            \"name\": \"Profile\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"link\": \"/dialogs\",\r\n            \"name\": \"Dialogs\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"link\": \"/users\",\r\n            \"name\": \"Users\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"link\": \"/news\",\r\n            \"name\": \"News\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"link\": \"/music\",\r\n            \"name\": \"Music\"\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"link\": \"/settings\",\r\n            \"name\": \"Settings\"\r\n        },\r\n    ],\r\n    dataFriends: [\r\n        {\r\n            \"id\": 1,\r\n            \"avatarLink\": \"./images/avatars/mishka.jpg\",\r\n            \"friendName\": \"Мишка\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"avatarLink\": \"./images/avatars/vlad.jpg\",\r\n            \"friendName\": \"Влад\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"avatarLink\": \"./images/avatars/nastya.jpg\",\r\n            \"friendName\": \"Наська\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst asideReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default asideReducer;","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport asideReducer from './aside-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    asideState: asideReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport AsideContainer from './components/Aside/AsideContainer';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/redux-store';\r\n\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Music = React.lazy(() => import('./components/Music/Music'));\r\nconst News = React.lazy(() => import('./components/News/News'));\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    } else {\r\n      return (\r\n        <div className=\"appWrapper\">\r\n          <HeaderContainer />\r\n          <AsideContainer />\r\n          <div className=\"appWrapperContent\">\r\n          <React.Suspense fallback={<div>Загрузка...</div>}>\r\n            <Route path=\"/login\" render={() => <Login />} />\r\n            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n            <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n            <Route path=\"/users\" render={() => <UsersContainer />} />\r\n            <Route path=\"/news\" component={News} />\r\n            <Route path=\"/music\" component={Music} />\r\n            <Route path=\"/settings\" component={Settings} />\r\n          </React.Suspense>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App); \r\n\r\nconst SamuraiJSApp = () => {\r\n  return <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n    </BrowserRouter >\r\n}\r\n\r\nexport default SamuraiJSApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SamuraiJSApp from './App';\r\n\r\n\r\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\n\r\nlet inizialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = inizialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } });\r\n\r\nexport const authorized = () => async (dispatch) => {\r\n  const response = await authAPI.me();\r\n\r\n  if (response.resultCode === 0) {\r\n    let { id, email, login } = response.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe);\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(authorized());\r\n  } else {\r\n    let message = response.messages.length > 0 ? response.messages[0] : 'Some error!'\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  const response = await authAPI.logout()\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside_wrap\":\"AsideFriends_aside_wrap__1eOkY\",\"asideFriends\":\"AsideFriends_asideFriends__L4YEA\",\"asideFriends__item\":\"AsideFriends_asideFriends__item__1DPia\",\"friend_avatar\":\"AsideFriends_friend_avatar__3Gi2-\",\"friend_name\":\"AsideFriends_friend_name__qq-s-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__1hhm_\",\"mainNav\":\"Aside_mainNav__2NNsx\",\"mainNav_item\":\"Aside_mainNav_item__1NEAl\",\"active_item\":\"Aside_active_item__1fMr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__oAG83\",\"loginBlock\":\"Header_loginBlock__331_k\"};","import React from 'react';\r\nimport s from './Preloader.module.css';\r\nimport preloader from '../../../images/icons/preloader.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={s.wrapper}>\r\n        <img src={preloader} alt=\"Preloader\" />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { profileAPI } from '../api/api';\r\n\r\n// Actions\r\nconst NEW_POST = \"profile/NEW_POST\";\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\";\r\nconst DELETE_POST = \"profile/DELETE_POST\";\r\n\r\n// Reducer\r\nlet initialState = {\r\n    postData: [\r\n        {\r\n            id: 1,\r\n            message: \"It's my first post1\",\r\n            likeCount: 2\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hello! How are you?\",\r\n            likeCount: 4\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Хей, йоу\",\r\n            likeCount: 10\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case NEW_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [\r\n                    ...state.postData,\r\n                    {\r\n                        id: 4,\r\n                        message: action.newPostBody,\r\n                        likeCount: 0\r\n                    },\r\n                ],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postData: state.postData.filter((elem) => elem.id !== action.postId),\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const addPost = (newPostBody) => ({\r\n    type: NEW_POST,\r\n    newPostBody\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n})\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const NEW_MESSAGE = \"dialogs/NEW_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dataDialogsItem: [\r\n        {\r\n            id: 1,\r\n            name: \"Dencha\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Mishka\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Nastya\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Jenya\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Vlad\"\r\n        }\r\n    ],\r\n    dataMessages: [\r\n        {\r\n            id: 1,\r\n            content: \"Hi\",\r\n            avatar: \"./images/avatars/mishka.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            content: \"How are you?\",\r\n            avatar: \"./images/avatars/mishka.jpg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            content: \"Йоу! Чо как чувааааак!\",\r\n            avatar: \"./images/avatars/molib.jpg\"\r\n        },\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NEW_MESSAGE:\r\n            let contentText = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                dataMessages: [...state.dataMessages, { id: 4, content: contentText, avatar: \"./images/avatars/molib.jpg\" }]\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const newMessage = (newMessageBody) => ({\r\n    type: NEW_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"7099b740-e8c5-45c1-9acb-124c841c1fd7\"\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n},\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n      .then(response => response.data)\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n      .then(response => response.data)\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n      .then(response => response.data)\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe })\r\n      .then(response => response.data)\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n      .then(response => response.data)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`/profile/${userId}`)\r\n      .then(response => response.data)\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`)\r\n      .then(response => response.data)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  }\r\n}\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n      if (u[objPropName] === itemId) {\r\n          return { ...u, ...newObjProps};\r\n      }\r\n      return u;\r\n  })\r\n}","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../untils/object-helpers'\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const response = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    const apiMethod = usersAPI.follow.bind(usersAPI);\r\n    const actionCreator = followSuccess;\r\n\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    const apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    const actionCreator = unfollowSuccess;\r\n\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__sJisL\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.dbbc21bd.svg\";"],"sourceRoot":""}